2022-02-18 09:56:14:443 grammar LogManager.java:25 before: (LEXER_GRAMMAR ChemsLexer (RULES (RULE CONSOLE (BLOCK (ALT 'console'))) (RULE LOG (BLOCK (ALT 'log'))) (RULE P_NUMBER (BLOCK (ALT 'number'))) (RULE P_STRING (BLOCK (ALT 'string'))) (RULE P_IF (BLOCK (ALT 'if'))) (RULE P_WHILE (BLOCK (ALT 'while'))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE STRING (BLOCK (ALT '"' (* (BLOCK (ALT (~ (SET ["]))))) '"'))) (RULE ID (BLOCK (ALT (BLOCK (ALT [a-zA-Z_])) (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE PUNTO (BLOCK (ALT '.'))) (RULE PTCOMA (BLOCK (ALT ';'))) (RULE DIFERENTE (BLOCK (ALT '!'))) (RULE IGUAL (BLOCK (ALT '='))) (RULE MAYORIGUAL (BLOCK (ALT '>='))) (RULE MENORIGUAL (BLOCK (ALT '<='))) (RULE MAYOR (BLOCK (ALT '>'))) (RULE MENOR (BLOCK (ALT '<'))) (RULE MUL (BLOCK (ALT '*'))) (RULE DIV (BLOCK (ALT '/'))) (RULE ADD (BLOCK (ALT '+'))) (RULE SUB (BLOCK (ALT '-'))) (RULE PARIZQ (BLOCK (ALT '('))) (RULE PARDER (BLOCK (ALT ')'))) (RULE LLAVEIZQ (BLOCK (ALT '{'))) (RULE LLAVEDER (BLOCK (ALT '}'))) (RULE WHITESPACE (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \\\r\n\t])))) skip))) (RULE ESC_SEQ (RULEMODIFIERS fragment) (BLOCK (ALT '\\' (BLOCK (ALT '\\') (ALT '@') (ALT '[') (ALT ']') (ALT '.') (ALT '#') (ALT '+') (ALT '-') (ALT '!') (ALT ':') (ALT ' ')))))))
2022-02-18 09:56:14:456 grammar LogManager.java:25 after: (LEXER_GRAMMAR ChemsLexer (RULES (RULE CONSOLE (BLOCK (ALT 'console'))) (RULE LOG (BLOCK (ALT 'log'))) (RULE P_NUMBER (BLOCK (ALT 'number'))) (RULE P_STRING (BLOCK (ALT 'string'))) (RULE P_IF (BLOCK (ALT 'if'))) (RULE P_WHILE (BLOCK (ALT 'while'))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE STRING (BLOCK (ALT '"' (* (BLOCK (ALT (~ (SET ["]))))) '"'))) (RULE ID (BLOCK (ALT (BLOCK (ALT [a-zA-Z_])) (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE PUNTO (BLOCK (ALT '.'))) (RULE PTCOMA (BLOCK (ALT ';'))) (RULE DIFERENTE (BLOCK (ALT '!'))) (RULE IGUAL (BLOCK (ALT '='))) (RULE MAYORIGUAL (BLOCK (ALT '>='))) (RULE MENORIGUAL (BLOCK (ALT '<='))) (RULE MAYOR (BLOCK (ALT '>'))) (RULE MENOR (BLOCK (ALT '<'))) (RULE MUL (BLOCK (ALT '*'))) (RULE DIV (BLOCK (ALT '/'))) (RULE ADD (BLOCK (ALT '+'))) (RULE SUB (BLOCK (ALT '-'))) (RULE PARIZQ (BLOCK (ALT '('))) (RULE PARDER (BLOCK (ALT ')'))) (RULE LLAVEIZQ (BLOCK (ALT '{'))) (RULE LLAVEDER (BLOCK (ALT '}'))) (RULE WHITESPACE (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \\\r\n\t])))) skip))) (RULE ESC_SEQ (RULEMODIFIERS fragment) (BLOCK (ALT '\\' (SET '\\' '@' '[' ']' '.' '#' '+' '-' '!' ':' ' '))))))
